image: maven:3-jdk-8

stages:
  - build
  - deploy_dev

before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( yum update -y && yum install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  # error: https://gitlab.com/gitlab-examples/ssh-private-key/issues/1
  # - echo "$SSH_PRIVATE_KEY_DEV"
  - ssh-add <(echo "$SSH_PRIVATE_KEY_DEV")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
build_job:
  stage: build
  only:
    - master
  script:
    - cd search
    - pwd
    - mvn package -B
    - cd ..
    - pwd

deploy_dev_job:
  stage: deploy_dev
  environment:
    name: development
  only:
    - master
  script:
    - cd search
    - pwd
    - ssh root@$DEPLOY_SERVER "p=`jps | grep SearchApplication | awk '{print $1}'`; if [ -n \"$p\" ] ; then kill $p; fi;"
    - scp -r /target/* root@$DEPLOY_SERVER:$TARGET_DIR
    - ssh root@$DEPLOY_SERVER "cd target;sh start.sh"
    - cd ..
    - pwd

